name: Terrapin Package Build

on: [push, repository_dispatch]

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@master
      name: Checkout source

    - name: Build package with Oryx
      run:  docker run --volume $(pwd):/repo --volume /home/runner/outputfolder:/output --env PRE_BUILD_COMMAND='dotnet run --project .github/workflows/PrebuildLogic.csproj && rm -rf /repo/.github/workflows/ && rm -rf /repo/.azure-pipelines/umask 0 && npm config set cache /tmp/.npm' mcr.microsoft.com/oryx/build:latest oryx build --package /repo/ --output /output -p npm_registry_url=https:///api/npm/registry/default/ -p registry=https:///api/npm/registry/default/

    - uses: actions/create-release@v1
      id: create_release
      name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v4.17.15+${{ github.sha }}
        release-name: '[Terrapin] v4.17.15'
        body: 'Job: 46deb060-5845-4005-ac93-3417164c6368 | Package: lodash-es@4.17.15 | Manager: Npm | Commit: ${{ github.sha }}'
        draft: false
        prerelease: false

    - uses: actions/upload-release-asset@v1
      name: Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/outputfolder/lodash-es-4.17.15.tgz
        asset_name: lodash-es-4.17.15.tgz
        asset_content_type: application/gzip
